application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName web
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1667305097882
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jwtSecretKey "NDYxODMwY2ZjMTlmZjJiYjI0Y2ZmODczNWI3N2Q4ZDg3ZGY0ZWUwYzI5YWM5ZGRjNDA5MTIwMTkwMWU3ODg0OWQ5ODc1MjMxODEyZmZjNzk5OTNiZTRiOTQ4ZGFmYmQ2OGM2NmI3YjMzZTFiZWY4ZTk0ZGRiNDMyYzY5ZTA4MGY="
    languages [vi, en]
    messageBroker false
    nativeLanguage en
    // otherModules []
    packageName com.ptudw.web
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType no
    skipUserManagement false
    testFrameworks []
    websocket spring-websocket
    withAdminUi true
  }

  entities *
}

entity Course {
    code String required
    name String required
    invitationCode String required
    expirationDate ZonedDateTime
    gradeStructureId Long required
    isDeleted Boolean
    createdBy String required
    createdDate ZonedDateTime required
    lastModifiedBy String required
    lastModifiedDate ZonedDateTime required
}

entity GradeStructure {
    courseId Long required
    isDeleted Boolean
    createdBy String required
    createdDate ZonedDateTime required
    lastModifiedBy String required
    lastModifiedDate ZonedDateTime required
    type GradeType required
}

enum GradeType{
	PERCENTAGE,
    POINT,
    NONE
}

entity GradeComposition {
    name String required
    scale Long
    isDeleted Boolean
    createdBy String required
    createdDate ZonedDateTime required
    lastModifiedBy String required
    lastModifiedDate ZonedDateTime required
    type GradeType required
}

entity Assignment {
    name String required
    weight Long
    isDeleted Boolean
    createdBy String required
    createdDate ZonedDateTime required
    lastModifiedBy String required
    lastModifiedDate ZonedDateTime required
}

entity AssignmentGrade {
    studentId String required,
    grade Long required
    isDeleted Boolean
    createdBy String required
    createdDate ZonedDateTime required
    lastModifiedBy String required
    lastModifiedDate ZonedDateTime required
}

entity CourseGrade {
    gradeCompositionId Long
    studentId String required,
    isMarked Boolean
    isDeleted Boolean
    createdBy String required
    createdDate ZonedDateTime required
    lastModifiedBy String required
    lastModifiedDate ZonedDateTime required
}

entity UserCourse {
    courseId Long required
    userId Long required
}

relationship OneToMany {
    Assignment{course} to Course{assignments}
    GradeStructure{gradeCompositions} to GradeComposition{gradeStructure} 
    AssignmentGrade{assignment} to Assignment{assignmentGrades}
}

filter *
paginate * with pagination
